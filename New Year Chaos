#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'minimumBribes' function below.
#
# The function accepts INTEGER_ARRAY q as parameter.
# https://www.hackerrank.com/challenges/new-year-chaos/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=arrays
def minimumBribes(q):
    # Write your code here
    bribes=0 #total number of bribes
    for i in range(len(q)):
        #print(i+1, ": ", q[i])
        if (q[i] - (i+1)) > 2: #if the current number moved up more than 3 times, then print and end the loop.
            print("Too chaotic")
            return
        #if (i+1) > q[i]: #if the current number is lower than it should me, check how many numbers from its original location to its current location -1 is higher than it. **Needs Fixing** **Error is in the logic**?
        for j in range(q[i]-2 if (q[i]-2)>=0 else q[i]-1, i):
            #print(j)
            if q[j] > q[i]:
                bribes+=1
    print(bribes)

if __name__ == '__main__':
    t = int(input().strip())
    for t_itr in range(t):
        n = int(input().strip())
        q = list(map(int, input().rstrip().split()))
        minimumBribes(q)
